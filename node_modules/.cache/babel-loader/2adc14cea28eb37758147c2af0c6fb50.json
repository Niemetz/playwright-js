{"ast":null,"code":"var _jsxFileName = \"/Users/john/trainings/udemy/react-app/src/components/BasicTextArea.react.js\";\nimport React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { purple } from '@mui/material/colors';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  inputRoot: {\n    color: \"blue\",\n    backgroundColor: \"#f2f2f2\"\n  },\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: purple[500]\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: purple[500]\n    }\n  }\n});\nexport class BasicTextArea extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          maxRows: 4,\n          \"aria-label\": \"maximum height\",\n          placeholder: \"Maximum 4 rows\",\n          \"data-id\": \"textarea\",\n          defaultValue: \"Testing Talks Hub has been established to teach the community how to build world class automation frameworks using the latest tooling.\",\n          style: {\n            width: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n;","map":{"version":3,"names":["React","createTheme","ThemeProvider","purple","TextareaAutosize","theme","inputRoot","color","backgroundColor","palette","primary","main","secondary","BasicTextArea","Component","render","width"],"sources":["/Users/john/trainings/udemy/react-app/src/components/BasicTextArea.react.js"],"sourcesContent":["import React from 'react';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { purple } from '@mui/material/colors';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nconst theme = createTheme({\n    inputRoot: {\n        color: \"blue\",\n        backgroundColor: \"#f2f2f2\"\n    },\n    palette: {\n        primary: {\n            // Purple and green play nicely together.\n            main: purple[500],\n        },\n        secondary: {\n            // This is green.A700 as hex.\n            main: purple[500],\n        },\n    },\n});\n\nexport class BasicTextArea extends React.Component {\n\n    render() {\n\n        return (\n            <>\n                <ThemeProvider theme={theme}>\n                    <TextareaAutosize\n                        maxRows={4}\n                        aria-label=\"maximum height\"\n                        placeholder=\"Maximum 4 rows\"\n                        data-id=\"textarea\"\n                        defaultValue=\"Testing Talks Hub has been established to teach the community how to build world class automation frameworks using the latest tooling.\"\n                        style={{ width: 200 }}\n                    />\n                </ThemeProvider>\n            </>\n        );\n    }\n};\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACtBK,SAAS,EAAE;IACPC,KAAK,EAAE,MADA;IAEPC,eAAe,EAAE;EAFV,CADW;EAKtBC,OAAO,EAAE;IACLC,OAAO,EAAE;MACL;MACAC,IAAI,EAAER,MAAM,CAAC,GAAD;IAFP,CADJ;IAKLS,SAAS,EAAE;MACP;MACAD,IAAI,EAAER,MAAM,CAAC,GAAD;IAFL;EALN;AALa,CAAD,CAAzB;AAiBA,OAAO,MAAMU,aAAN,SAA4Bb,KAAK,CAACc,SAAlC,CAA4C;EAE/CC,MAAM,GAAG;IAEL,oBACI;MAAA,uBACI,QAAC,aAAD;QAAe,KAAK,EAAEV,KAAtB;QAAA,uBACI,QAAC,gBAAD;UACI,OAAO,EAAE,CADb;UAEI,cAAW,gBAFf;UAGI,WAAW,EAAC,gBAHhB;UAII,WAAQ,UAJZ;UAKI,YAAY,EAAC,wIALjB;UAMI,KAAK,EAAE;YAAEW,KAAK,EAAE;UAAT;QANX;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ,iBADJ;EAcH;;AAlB8C;AAmBlD"},"metadata":{},"sourceType":"module"}